apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint: {{ ansible_host }}: {{ server_port }}
  labels:
    component: kube-apiserver
    tier: control-plane
  name: kube-apiserver
  namespace: kube-system
spec:
  containers:
    - command:
        - kube-apiserver
        - --advertise-address={{ ansible_host }}
        - --allow-privileged=true
        - --authorization-mode=Node,RBAC
        - --client-ca-file={{ kubernetes_pki_directory }}/{{ kubernetes_ca_certificate }}
        - --enable-admission-plugins=NodeRestriction
        - --enable-bootstrap-token-auth=true
        - --etcd-cafile={{ kubernetes_etcd_pki_directory }}/{{ etcd_ca_certificate }}
        - --etcd-certfile={{ kubernetes_pki_directory }}/{{ apiserver_etcd_client_certificate }}
        - --etcd-keyfile={{ kubernetes_pki_directory }}/{{ apiserver_etcd_client_key }}
        - --etcd-servers={% for host in groups['etcd'] %}https://{{ hostvars[host].ansible_host }}:2379{{ "," if not loop.last else "\r\n" }}{% endfor %}
        - --insecure-port=0
        - --kubelet-client-certificate={{ kubernetes_pki_directory }}/{{ apiserver_kubelet_client_certificate }}
        - --kubelet-client-key={{ kubernetes_pki_directory }}/{{ apiserver_kubelet_client_key }}
        - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
        - --proxy-client-cert-file={{ kubernetes_pki_directory }}/{{ front_proxy_ca_certificate }}
        - --proxy-client-key-file={{ kubernetes_pki_directory }}/{{ front_proxy_ca_key }}
        - --requestheader-allowed-names=front-proxy-client
        - --requestheader-client-ca-file={{ kubernetes_pki_directory }}/{{ front_proxy_ca_certificate }}
        - --requestheader-extra-headers-prefix=X-Remote-Extra-
        - --requestheader-group-headers=X-Remote-Group
        - --requestheader-username-headers=X-Remote-User
        - --secure-port=6443
        - --service-account-issuer=https://kubernetes.default.svc.cluster.local
        - --service-account-key-file={{ kubernetes_pki_directory }}/{{ service_account_certificate }}
        - --service-account-signing-key-file={{ kubernetes_pki_directory }}/{{ service_account_key }}
        - --service-cluster-ip-range=10.96.0.0/12
        - --tls-cert-file={{ kubernetes_pki_directory }}/{{ apiserver_certificate }}
        - --tls-private-key-file={{ kubernetes_pki_directory }}/{{ apiserver_key }}
      image: registry.aliyuncs.com/google_containers/kube-apiserver:{{ kubernetes_version }}
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: {{ ansible_host }}
          path: /livez
          port: 6443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        timeoutSeconds: 15
      name: kube-apiserver
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: {{ ansible_host }}
          path: /readyz
          port: 6443
          scheme: HTTPS
        periodSeconds: 1
        timeoutSeconds: 15
      resources:
        requests:
          cpu: 250m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: {{ ansible_host }}
          path: /livez
          port: 6443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        timeoutSeconds: 15
      volumeMounts:
        - mountPath: /etc/ssl/certs
          name: ca-certs
          readOnly: true
        - mountPath: /etc/ca-certificates
          name: etc-ca-certificates
          readOnly: true
        - mountPath: /etc/pki
          name: etc-pki
          readOnly: true
        - mountPath: {{ kubernetes_pki_directory }}
          name: k8s-certs
          readOnly: true
        - mountPath: /usr/local/share/ca-certificates
          name: usr-local-share-ca-certificates
          readOnly: true
        - mountPath: /usr/share/ca-certificates
          name: usr-share-ca-certificates
          readOnly: true
  hostNetwork: true
  priorityClassName: system-node-critical
  volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /etc/pki
        type: DirectoryOrCreate
      name: etc-pki
    - hostPath:
        path: {{ kubernetes_pki_directory }}
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates