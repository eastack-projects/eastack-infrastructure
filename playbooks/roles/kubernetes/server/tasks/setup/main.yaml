- name: Create kubernetes extract directory
  file:
    path: "{{ KUBERNETES_EXTRACT_DIR }}"
    state: directory

- name: Extract kubernetes package
  unarchive:
    src: "{{ KUBERNETES_SERVER_PACKAGE_NAME }}"
    dest: "{{ KUBERNETES_EXTRACT_DIR }}"
    creates: "{{ KUBERNETES_EXTRACT_DIR }}/server"
    extra_opts: [ "--strip-components=1" ]

- name: Install kubernetes components
  copy:
    remote_src: yes
    src: "{{ KUBERNETES_EXTRACT_DIR }}/server/bin/{{ item }}"
    dest: "/usr/bin/{{ item }}"
    mode: 0755
  with_items:
    - kube-apiserver
    - kube-controller-manager
    - kube-scheduler
    - kubectl
  notify: Restart kubernetes server service

- name: Add kubernetes server systemd unit
  template:
    src: "{{ item.src }}"
    dest: "/lib/systemd/system/{{ item.dest }}"
    mode: 0644
  with_items:
    - { src: setup/apiserver.service.j2, dest: kube-apiserver.service }
    - { src: setup/controller-manager.service.j2, dest: kube-controller-manager.service }
    - { src: setup/scheduler.service.j2, dest: kube-scheduler.service }
  notify: Restart kubernetes server service

- name: Add kubernetes service config
  template:
    src: "{{ item.src }}"
    dest: "{{ KUBERNETES_CONFIG_DIR }}/{{ item.dest }}"
    mode: 0644
  with_items:
    - { src: setup/apiserver.env.j2, dest: apiserver.env }
    - { src: setup/controller-manager.env.j2, dest: controller-manager.env }
    - { src: setup/scheduler.env.j2, dest: scheduler.env }
  notify: Restart kubernetes server service

- name: Add kubeconf config file
  template:
    src: "{{ item.src }}"
    dest: "{{ KUBERNETES_CONFIG_DIR }}/{{ item.dest }}"
    mode: 0644
  notify: Restart kubernetes server service
  with_items:
    - { src: setup/controller-manager.conf.j2, dest: controller-manager.conf }
    - { src: setup/admin.conf.j2, dest: admin.conf }
    - { src: setup/scheduler.conf.j2, dest: scheduler.conf }