---
# download
- name: Stat kubernetes server package
  become: no
  local_action:
    module: stat
    path: "{{ KUBERNETES_SERVER_PACKAGE_NAME }}"
  register: kubernetes_server_package_stat

- name: Try donwload kubernetes serverr package
  include_tasks: download-k8s-server-package.yaml
  when: not kubernetes_server_package_stat.stat.exists

# todo split it
- include_tasks: create-directory.yaml

# Generate certificate
- name: Waits vault service started
  wait_for:
    host: "{{ VAULT_FQDN }}"
    port: "{{ VAULT_PORT }}"

- name: Slurp vault initialize result
  slurp:
    src: "{{ VAULT_PKI_DIR }}/{{ VAULT_INITIALIZE_RESULT }}"
  register: vault_initialize_result
  delegate_to: vault

- name: Base64 decode vault initialize result
  set_fact:
    vault_initialize_result: "{{ vault_initialize_result['content'] | b64decode }}"

- name: Create kubernetes PKI directory
  file:
    path: "{{ K8S_SERVER_PKI_DIR }}"
    state: directory
    mode: 0644

- include_tasks: gen-kube-apiserver-cert.yaml
- include_tasks: gen-kube-apiserver-etcd-client-cert.yaml
- include_tasks: gen-kube-apiserver-kubelet-client-cert.yaml
- include_tasks: gen-kube-controller-manager-kube-apiserver-client-cert.yaml
- include_tasks: gen-kube-scheduler-kube-apiserver-client-cert.yaml
- include_tasks: gen-service-account-cert.yaml
- include_tasks: gen-admin-cert.yaml
