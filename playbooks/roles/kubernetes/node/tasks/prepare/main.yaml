---
# download
- name: Stat kubernetes node package
  become: no
  local_action:
    module: stat
    path: "{{ KUBERNETES_NODE_PACKAGE_NAME }}"
  register: kubernetes_node_package_stat

- name: Try donwload kubernetes node package
  include_tasks: download-k8s-node-package.yaml
  when: not kubernetes_node_package_stat.stat.exists

- name: Create directory
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - /opt/kubernetes/package
    - /opt/cni/package
    - /opt/cni/bin
    - /opt/kubernetes/tls
    - /var/lib/kubelet
    - /var/lib/kube-proxy
    - /etc/kubernetes/manifests
    - /etc/kubernetes/pki
    - /etc/systemd/system/kubelet.service.d
    - /etc/systemd/system/kube-proxy.service.d

- name: Slurp vault initialize result
  slurp:
    src: "{{ VAULT_PKI_DIR }}/{{ VAULT_INITIALIZE_RESULT }}"
  register: vault_initialize_result
  delegate_to: vault

- name: Base64 decode vault initialize result
  set_fact:
    vault_initialize_result: "{{ vault_initialize_result['content'] | b64decode }}"

- name: Slurp intermediate certificate
  slurp:
    src: "{{ VAULT_PKI_DIR }}/{{ VAULT_CERT_NAME }}"
  register: int_cert
  delegate_to: vault

- include_tasks: config-kernel.yaml
- include_tasks: gen-kube-proxy-cert.yaml
- include_tasks: config-bootstrap-token.yaml
