---
- name: Waits vault service started
  wait_for:
    host: "{{ VAULT_FQDN }}"
    port: "{{ VAULT_PORT }}"

- name: Init the vault
  uri:
    method: PUT
    url: "https://{{ VAULT_FQDN }}:{{ VAULT_PORT }}/v1/sys/init"
    body_format: json
    body:
      secret_shares: 3
      secret_threshold: 2
  register: init_result

- name: Persistent init result
  copy:
    content: "{{ init_result.json }}"
    dest: "{{ VAULT_KEY_DIR }}/init-result.json"

# Unseal
- name: Include vault keys
  slurp:
    src: "{{ VAULT_KEY_DIR }}/init-result.json"
  register: vault_init_result
  delegate_to: vault

- name: Base64 decode vault_init_result
  set_fact:
    vault_init_result: "{{ vault_init_result['content'] | b64decode}}"

- name: Unseal vault
  uri:
    method: PUT
    url: "https://{{ VAULT_FQDN }}:{{ VAULT_PORT }}/v1/sys/unseal"
    body_format: json
    body:
      key: "{{ item }}"
  with_items: "{{ vault_init_result['keys'] }}"

# Mount PKI secret engine
- name: Mount PKI secret engine
  uri:
    method: POST
    headers:
      X-Vault-Token: "{{ vault_init_result['root_token'] }}"
    url: "https://{{ VAULT_FQDN }}:{{ VAULT_PORT }}/v1/sys/mounts/pki"
    body_format: json
    status_code: 204
    body:
      type: pki

- name: Tune PKI secret engine
  uri:
    method: POST
    headers:
      X-Vault-Token: "{{ vault_init_result['root_token'] }}"
    url: "https://{{ VAULT_FQDN }}:{{ VAULT_PORT }}/v1/sys/mounts/pki/tune"
    body_format: json
    status_code: 204
    body:
      description: Root certificate
      max_lease_ttl: "{{ MAX_PKI_TTL }}"
      default_lease_ttl: "{{ MAX_PKI_TTL }}"

# Submit CA certificate
- name: Slurp vault key
  slurp:
    src: "{{ VAULT_KEY_DIR }}/tls.key"
  register: vault_key

- name: Base64 decode vault_key
  set_fact:
    vault_key: "{{ vault_key['content'] | b64decode}}"

- name: Slurp vault crt
  slurp:
    src: "{{ VAULT_KEY_DIR }}/tls.crt"
  register: vault_crt

- name: Base64 decode vault_crt
  set_fact:
    vault_crt: "{{ vault_crt['content'] | b64decode}}"

- name: Submit CA certificate
  uri:
    method: POST
    headers:
      X-Vault-Token: "{{ vault_init_result['root_token'] }}"
    url: "https://{{ VAULT_FQDN }}:{{ VAULT_PORT }}/v1/pki/config/ca"
    body_format: json
    status_code: 204
    body:
      pem_bundle: "{{ vault_key + '\n' +  vault_crt }}"

# Mount intermediate ca
- name: Mount PKI intermediate secret engine
  uri:
    method: POST
    headers:
      X-Vault-Token: "{{ vault_init_result['root_token'] }}"
    url: "https://{{ VAULT_FQDN }}:{{ VAULT_PORT }}/v1/sys/mounts/pki_int_ipool"
    body_format: json
    status_code: 204
    body:
      type: pki

- name: Tune PKI intermediate secret engine
  uri:
    method: POST
    headers:
      X-Vault-Token: "{{ vault_init_result['root_token'] }}"
    url: "https://{{ VAULT_FQDN }}:{{ VAULT_PORT }}/v1/sys/mounts/pki_int_ipool/tune"
    body_format: json
    status_code: 204
    body:
      description: Intermediate certificate
      max_lease_ttl: "{{ MAX_PKI_TTL }}"
      default_lease_ttl: "{{ PKI_TTL }}"

# Generate intermediate CA
- name: Generate intermediate CA csr
  uri:
    method: POST
    headers:
      X-Vault-Token: "{{ vault_init_result['root_token'] }}"
    url: "https://{{ VAULT_FQDN }}:{{ VAULT_PORT }}/v1/pki_int_ipool/intermediate/generate/exported"
    body_format: json
    body:
      common_name: ipool.me
  register: intermediate_ca_csr

- name: Persistent peer intermediate CA CSR result
  copy:
    content: "{{ intermediate_ca_csr.json.data.csr }}"
    dest: "{{ VAULT_KEY_DIR }}/vault_int_ca.csr"

- name: Persistent intermediate CA private key result
  copy:
    content: "{{ intermediate_ca_csr.json.data.private_key }}"
    dest: "{{ VAULT_KEY_DIR }}/vault_int_ca.key"

- name: Include vault_int_ca.csr
  slurp:
    src: "{{ VAULT_KEY_DIR }}/vault_int_ca.csr"
  register: vault_int_ca_csr

- name: Base64 decode vault_int_ca_csr
  set_fact:
    vault_int_ca_csr: "{{ vault_int_ca_csr['content'] | b64decode}}"

- name: Sign intermediate CA
  uri:
    method: POST
    headers:
      X-Vault-Token: "{{ vault_init_result['root_token'] }}"
    url: "https://{{ VAULT_FQDN }}:{{ VAULT_PORT }}/v1/pki/root/sign-intermediate"
    body_format: json
    body:
      csr: "{{ vault_int_ca_csr }}"
  register: intermediate_ca_crt

- name: Persistent intermediate CA certificate result
  copy:
    content: "{{ intermediate_ca_crt.json.data.certificate }}"
    dest: "{{ VAULT_KEY_DIR }}/vault_int_ca.crt"

- name: Include vault_int_ca.crt
  slurp:
    src: "{{ VAULT_KEY_DIR }}/vault_int_ca.crt"
  register: vault_int_ca_crt

- name: Base64 decode vault_int_ca_crt
  set_fact:
    vault_int_ca_crt: "{{ vault_int_ca_crt['content'] | b64decode}}"

- name: Set sign intermediate
  uri:
    method: POST
    headers:
      X-Vault-Token: "{{ vault_init_result['root_token'] }}"
    url: "https://{{ VAULT_FQDN }}:{{ VAULT_PORT }}/v1/pki_int_ipool/intermediate/set-signed"
    body_format: json
    status_code: 204
    body:
      certificate: "{{ vault_int_ca_crt }}"
